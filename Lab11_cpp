#include <iostream>
#include <regex>
#include <string>
class Reservation {
private:
    std::string reservationNumber;
    std::string date;
    std::string roomNumber;
public:
    Reservation(const std::string& resNum,const std::string& resDate, const std::string& roomNum) 
        : reservationNumber(resNum), date(resDate), roomNumber(roomNum) {}
    int checkRoomNumberAndGetFloor() const {
        std::regex pattern(R"(^[1-9][0-9]{2}$)");
        if (std::regex_match(roomNumber, pattern)) {
            int floor= roomNumber[0] - '0';
            return floor;
        } else {
            throw std::invalid_argument("Number room incorrect");
        }
    }
    std::string getRoomNumber() const {
        return roomNumber;
    }
};
int main() {
    try {
        Reservation res("R123", "2024-12-14", "204");
        int floor =res.checkRoomNumberAndGetFloor();
        std::cout << "Number room: " << res.getRoomNumber() << ", Floor: " << floor << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Error: " << e.what() << std::endl;
    }
    return 0;
}
